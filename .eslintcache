[{"D:\\batch7reactujian\\reactjsujian\\src\\index.js":"1","D:\\batch7reactujian\\reactjsujian\\src\\App.js":"2","D:\\batch7reactujian\\reactjsujian\\src\\reportWebVitals.js":"3","D:\\batch7reactujian\\reactjsujian\\src\\component\\Form.js":"4","D:\\batch7reactujian\\reactjsujian\\src\\component\\FormRadio.js":"5","D:\\batch7reactujian\\reactjsujian\\src\\component\\Select.js":"6","D:\\batch7reactujian\\reactjsujian\\src\\component\\FormCheckBox.js":"7","D:\\batch7reactujian\\reactjsujian\\src\\component\\FormTextArea.js":"8","D:\\batch7reactujian\\reactjsujian\\src\\component\\JawabanNya.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":1113,"mtime":1611917792519,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":200,"mtime":1611914506566,"results":"14","hashOfConfig":"11"},{"size":4299,"mtime":1611926708297,"results":"15","hashOfConfig":"11"},{"size":1113,"mtime":1611926876552,"results":"16","hashOfConfig":"11"},{"size":3826,"mtime":1611926717743,"results":"17","hashOfConfig":"11"},{"size":2452,"mtime":1611926826316,"results":"18","hashOfConfig":"11"},{"size":0,"mtime":1611926848191,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"8zyo80",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\batch7reactujian\\reactjsujian\\src\\index.js",[],["44","45"],"D:\\batch7reactujian\\reactjsujian\\src\\App.js",["46"],"import React, { Component } from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport FormCheckBox from './component/FormCheckBox';\nimport FormRadio from './component/FormRadio';\nimport FormTextArea from './component/FormTextArea';\nimport Select from './component/Select';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = { linkStatus: [] }\n  }\n\n  updateLinkStatus = (status) => {\n    this.setState({ linkStatus: status })\n\n\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Select linkStatus={this.state.linkStatus} />\n          <Switch>\n            <Route path=\"/redio\">\n              <FormRadio updateLinkStatus={this.updateLinkStatus} />\n            </Route>\n            <Route path=\"/cekboks\">\n              <FormCheckBox updateLinkStatus={this.updateLinkStatus} />\n            </Route>\n            <Route path=\"/teksarea\">\n              <FormTextArea updateLinkStatus={this.updateLinkStatus} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n","D:\\batch7reactujian\\reactjsujian\\src\\reportWebVitals.js",[],"D:\\batch7reactujian\\reactjsujian\\src\\component\\Form.js",[],["47","48"],"D:\\batch7reactujian\\reactjsujian\\src\\component\\FormRadio.js",["49","50","51","52"],"import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nclass FormRadio extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            soal: '',\r\n            jawabA: '',\r\n            jawabB: '',\r\n            jawabC: '',\r\n            jawabD: '',\r\n            kunci: '',\r\n            score: ''\r\n        }\r\n    }\r\n\r\n    handlerSoalChange = (event) => {\r\n        this.setState({\r\n            soal: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerJawabAChange = (event) => {\r\n        this.setState({\r\n            jawabA: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerJawabBChange = (event) => {\r\n        this.setState({\r\n            jawabB: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerJawabCChange = (event) => {\r\n        this.setState({\r\n            jawabC: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerJawabDChange = (event) => {\r\n        this.setState({\r\n            jawabD: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerKunciChange = (event) => {\r\n        this.setState({\r\n            kunci: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerScoreChange = (event) => {\r\n        this.setState({\r\n            score: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerSubmit = event => {\r\n        // alert(`${this.state.soal} ${this.state.jawabA} ${this.state.jawabB} ${this.state.jawabC} ${this.state.jawabD} ${this.state.kunci} ${this.state.score}`)\r\n        // console.log(`${this.state.soal}`)\r\n        // console.log(`${this.state.jawabA}`)\r\n        // console.log(`${this.state.jawabB}`)\r\n        // console.log(`${this.state.jawabC}`)\r\n        // console.log(`${this.state.jawabD}`)\r\n        // console.log(`${this.state.kunci}`)\r\n        // console.log(`${this.state.score}`)\r\n        event.preventDefault()\r\n        this.setState({\r\n            showGw: true\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\" >\r\n                        <div class=\"card-body\">\r\n                            {this.state.showGw && <p>1. {this.state.soal}</p>}\r\n                            {this.state.showGw && <a><input type=\"radio\" />{this.state.jawabA}</a>}\r\n                            {this.state.showGw && <a><input type=\"radio\" />{this.state.jawabC}</a>}<br />\r\n                            {this.state.showGw && <a><input type=\"radio\" />{this.state.jawabB}</a>}\r\n                            {this.state.showGw && <a><input type=\"radio\" />{this.state.jawabD}</a>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\" align=\"right\">\r\n                        <h1>Soal Radio</h1>\r\n                        <div class=\"card-body\">\r\n                            <label>Soal</label><br />\r\n                            <input type='text' value={this.state.soal} onChange={this.handlerSoalChange} /><br />\r\n                            <label>Jawab A</label><br />\r\n                            <input type='text' value={this.state.jawabA} onChange={this.handlerJawabAChange} /><br />\r\n                            <label>Jawab B</label><br />\r\n                            <input type='text' value={this.state.jawabB} onChange={this.handlerJawabBChange} /><br />\r\n                            <label>Jawab C</label><br />\r\n                            <input type='text' value={this.state.jawabC} onChange={this.handlerJawabCChange} /><br />\r\n                            <label>Jawab D</label><br />\r\n                            <input type='text' value={this.state.jawabD} onChange={this.handlerJawabDChange} /><br />\r\n                            <label>Kunci</label><br />\r\n                            <input type='text' value={this.state.kunci} onChange={this.handlerKunciChange} /><br />\r\n                            <label>Score</label><br />\r\n                            <input type='text' value={this.state.score} onChange={this.handlerScoreChange} /><br /><br /><br />\r\n                            <button type=\"submit\" onClick={this.handlerSubmit}>submit</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form >\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(FormRadio);","D:\\batch7reactujian\\reactjsujian\\src\\component\\Select.js",["53"],"import React, { Component } from 'react';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nclass Select extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n\r\n    }\r\n    render() {\r\n        console.log(\"Render\" + this.props.linkStatus[2])\r\n        return (\r\n            <div>\r\n                <div class=\"dropdown\" align=\"right\">\r\n                    <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        List Soal </button>\r\n                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                        <Link className={`nav-link ${this.props.linkStatus[0]}`} to=\"/redio\" >radio </Link>\r\n                        <Link className={`nav-link ${this.props.linkStatus[1]}`} to=\"/cekboks\" >checkbox </Link>\r\n                        <Link className={`nav-link ${this.props.linkStatus[2]}`} to=\"/teksarea\" >textarea </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Select;","D:\\batch7reactujian\\reactjsujian\\src\\component\\FormCheckBox.js",["54","55","56","57"],"import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass FormCheckBox extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            soal: '',\r\n            jawabA: '',\r\n            jawabB: '',\r\n            jawabC: '',\r\n            jawabD: '',\r\n            kunci: '',\r\n            score: ''\r\n        }\r\n    }\r\n\r\n    handlerSoalChange = (event) => {\r\n        this.setState({\r\n            soal: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerJawabAChange = (event) => {\r\n        this.setState({\r\n            jawabA: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerJawabBChange = (event) => {\r\n        this.setState({\r\n            jawabB: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerJawabCChange = (event) => {\r\n        this.setState({\r\n            jawabC: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerJawabDChange = (event) => {\r\n        this.setState({\r\n            jawabD: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerKunciChange = (event) => {\r\n        this.setState({\r\n            kunci: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerScoreChange = (event) => {\r\n        this.setState({\r\n            score: event.target.value\r\n        })\r\n    }\r\n\r\n    handlerSubmit = event => {\r\n        event.preventDefault()\r\n        this.setState({\r\n            showGw: true\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form>\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-6\">\r\n                        <div class=\"card-body\">\r\n                            {this.state.showGw && <p>2. {this.state.soal}</p>}\r\n                            {this.state.showGw && <a><input type=\"checkbox\" />{this.state.jawabA}</a>}\r\n                            {this.state.showGw && <a><input type=\"checkbox\" />{this.state.jawabC}</a>}<br />\r\n                            {this.state.showGw && <a><input type=\"checkbox\" />{this.state.jawabB}</a>}\r\n                            {this.state.showGw && <a><input type=\"checkbox\" />{this.state.jawabD}</a>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-sm-6\" align=\"right\">\r\n                        <h1>Soal CheckBox</h1>\r\n                        <div class=\"card-body\">\r\n                            <label>Soal</label><br />\r\n                            <input type='text' value={this.state.soal} onChange={this.handlerSoalChange} /><br />\r\n                            <label>Jawab A</label><br />\r\n                            <input type='text' value={this.state.jawabA} onChange={this.handlerJawabAChange} /><br />\r\n                            <label>Jawab B</label><br />\r\n                            <input type='text' value={this.state.jawabB} onChange={this.handlerJawabBChange} /><br />\r\n                            <label>Jawab C</label><br />\r\n                            <input type='text' value={this.state.jawabC} onChange={this.handlerJawabCChange} /><br />\r\n                            <label>Jawab D</label><br />\r\n                            <input type='text' value={this.state.jawabD} onChange={this.handlerJawabDChange} /><br />\r\n                            <label>Kunci</label><br />\r\n                            <input type='text' value={this.state.kunci} onChange={this.handlerKunciChange} /><br />\r\n\r\n                            <label>Score</label><br />\r\n                            <input type='text' value={this.state.score} onChange={this.handlerScoreChange} /><br /><br /><br />\r\n                            <button type=\"submit\" onClick={this.handlerSubmit}>submit</button>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(FormCheckBox);","D:\\batch7reactujian\\reactjsujian\\src\\component\\FormTextArea.js",[],"D:\\batch7reactujian\\reactjsujian\\src\\component\\JawabanNya.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":6,"column":3,"nodeType":"64","messageId":"65","endLine":6,"endColumn":7},{"ruleId":"58","replacedBy":"66"},{"ruleId":"60","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":84,"column":51,"nodeType":"70","endLine":84,"endColumn":54},{"ruleId":"68","severity":1,"message":"69","line":85,"column":51,"nodeType":"70","endLine":85,"endColumn":54},{"ruleId":"68","severity":1,"message":"69","line":86,"column":51,"nodeType":"70","endLine":86,"endColumn":54},{"ruleId":"68","severity":1,"message":"69","line":87,"column":51,"nodeType":"70","endLine":87,"endColumn":54},{"ruleId":"71","severity":1,"message":"72","line":6,"column":5,"nodeType":"73","messageId":"74","endLine":10,"endColumn":6},{"ruleId":"68","severity":1,"message":"69","line":76,"column":51,"nodeType":"70","endLine":76,"endColumn":54},{"ruleId":"68","severity":1,"message":"69","line":77,"column":51,"nodeType":"70","endLine":77,"endColumn":54},{"ruleId":"68","severity":1,"message":"69","line":78,"column":51,"nodeType":"70","endLine":78,"endColumn":54},{"ruleId":"68","severity":1,"message":"69","line":79,"column":51,"nodeType":"70","endLine":79,"endColumn":54},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["75"],["76"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]